pipeline {
    agent any
    triggers { cron("@hourly") }

    options {
      buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
    }
    parameters {
       string(name: 'JAVA_HOME', defaultValue: '/opt/oracle/java/', description: 'Java home')
       string(name: 'MAVEN_HOME', defaultValue: '/opt/tools/apache-maven-3.6.3', description: 'Maven home')
       string(name: 'MAVEN_OPTS', defaultValue: '', description: 'Extra settings for Maven')
    }

    environment {
        HERA_HOSTNAME = 'olympus'
    }

    stages {
        stage('Prep') {
            steps {
                //cleanWs()
                dir('hera') {
                  git 'https://github.com/jboss-set/hera.git'
                }

                script {
                  // Start container
                  env.BUILD_SCRIPT = "${env.WORKSPACE}/hera/mvn-wrapper.sh"
                  git url: "${env.GIT_REPOSITORY_URL}",
                      branch: "${env.GIT_REPOSITORY_BRANCH}"
                  sh label: '', script: "${env.WORKSPACE}/hera/hera.sh run"
                }
            }
        }
        stage ('Build') {
            steps {
                sh label: '', script: "${env.WORKSPACE}/hera/hera.sh job"
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '.', reportFiles: 'bugclerk-report.html', reportName: 'HTML Report', reportTitles: ''])
                archiveArtifacts artifacts: '**/*', fingerprint: true, followSymlinks: false, onlyIfSuccessful: true
            }
        }
    }
    post {
        always {
            script {
                try {
                    sh label: '', script: "${env.WORKSPACE}/hera/hera.sh stop"
                } catch (err) {
                    echo "Error while deleting container: ${err}"
                }
            }
        }
    }
}
